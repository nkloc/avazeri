{"remainingRequest":"/Users/nicolas/avazeri/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nicolas/avazeri/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nicolas/avazeri/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nicolas/avazeri/src/components/Header.vue?vue&type=template&id=61dd7a3d&scoped=true&","dependencies":[{"path":"/Users/nicolas/avazeri/src/components/Header.vue","mtime":1603555159674},{"path":"/Users/nicolas/avazeri/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nicolas/avazeri/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nicolas/avazeri/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nicolas/avazeri/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}